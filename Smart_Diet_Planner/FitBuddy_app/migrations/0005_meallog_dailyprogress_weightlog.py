# Generated by Django 5.2.7 on 2025-10-10 09:42

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('FitBuddy_app', '0004_remove_meallog_user_delete_dailyprogress_and_more'),
        ('recipes', '0003_recipe_diet_types'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20)),
                ('date_logged', models.DateField(default=django.utils.timezone.now)),
                ('servings', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)])),
                ('calories_consumed', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_logged', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('calories_consumed', models.IntegerField(default=0)),
                ('calories_goal', models.IntegerField(default=2000)),
                ('protein_consumed', models.FloatField(default=0.0)),
                ('carbs_consumed', models.FloatField(default=0.0)),
                ('fat_consumed', models.FloatField(default=0.0)),
                ('current_weight', models.FloatField(blank=True, null=True)),
                ('exercise_minutes', models.IntegerField(default=0)),
                ('water_glasses', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, max_length=1000)),
                ('mood', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('okay', 'Okay'), ('poor', 'Poor')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WeightLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('weight_unit', models.CharField(default='kg', max_length=10)),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_recorded'],
                'unique_together': {('user', 'date_recorded')},
            },
        ),
    ]
